{"version":3,"file":"9868.1d2962547f70b199bfd2.js?v=1d2962547f70b199bfd2","mappings":"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","sources":["webpack://@jupyterlab/application-top/./node_modules/d3-color/src/color.js","webpack://@jupyterlab/application-top/./node_modules/d3-color/src/define.js","webpack://@jupyterlab/application-top/./node_modules/d3-format/src/defaultLocale.js","webpack://@jupyterlab/application-top/./node_modules/d3-format/src/exponent.js","webpack://@jupyterlab/application-top/./node_modules/d3-format/src/formatDecimal.js","webpack://@jupyterlab/application-top/./node_modules/d3-format/src/formatSpecifier.js","webpack://@jupyterlab/application-top/./node_modules/d3-format/src/formatGroup.js","webpack://@jupyterlab/application-top/./node_modules/d3-format/src/formatNumerals.js","webpack://@jupyterlab/application-top/./node_modules/d3-format/src/formatTrim.js","webpack://@jupyterlab/application-top/./node_modules/d3-format/src/formatPrefixAuto.js","webpack://@jupyterlab/application-top/./node_modules/d3-format/src/formatRounded.js","webpack://@jupyterlab/application-top/./node_modules/d3-format/src/formatTypes.js","webpack://@jupyterlab/application-top/./node_modules/d3-format/src/identity.js","webpack://@jupyterlab/application-top/./node_modules/d3-format/src/locale.js"],"sourcesContent":["import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHex8: color_formatHex8,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHex8() {\n  return this.rgb().formatHex8();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb() {\n    return this;\n  },\n  clamp() {\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n  },\n  displayable() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatHex8: rgb_formatHex8,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n}\n\nfunction rgb_formatHex8() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\n\nfunction rgb_formatRgb() {\n  const a = clampa(this.opacity);\n  return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n}\n\nfunction clampa(opacity) {\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\n\nfunction clampi(value) {\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\n\nfunction hex(value) {\n  value = clampi(value);\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  clamp() {\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n  },\n  displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n  }\n}));\n\nfunction clamph(value) {\n  value = (value || 0) % 360;\n  return value < 0 ? value + 360 : value;\n}\n\nfunction clampt(value) {\n  return Math.max(0, Math.min(1, value || 0));\n}\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n"],"names":["Color","darker","brighter","reI","reN","reP","reHex","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","copy","channels","Object","assign","this","constructor","displayable","rgb","hex","color_formatHex","formatHex","formatHex8","color_formatHex8","formatHsl","color_formatHsl","formatRgb","color_formatRgb","toString","hslConvert","format","m","l","trim","toLowerCase","exec","length","parseInt","rgbn","Rgb","rgba","hsla","hasOwnProperty","NaN","n","r","g","b","a","rgbConvert","o","opacity","arguments","k","Math","pow","clamp","clampi","clampa","rgb_formatHex","rgb_formatHex8","rgb_formatRgb","isNaN","max","min","value","round","h","s","Hsl","hsl","m2","m1","hsl2rgb","clamph","clampt","factory","prototype","extend","parent","definition","create","key","locale","formatPrefix","defaultLocale","thousands","grouping","currency","x","abs","toLocaleString","replace","formatDecimalParts","p","i","toExponential","indexOf","coefficient","slice","re","formatSpecifier","specifier","match","Error","FormatSpecifier","fill","align","sign","symbol","zero","width","comma","precision","type","undefined","t","j","push","substring","reverse","join","numerals","out","i0","i1","prefixExponent","d","formatDecimal","exponent","floor","Array","toFixed","toPrecision","formatRounded","formatPrefixAuto","toUpperCase","map","prefixes","group","identity","formatGroup","call","Number","currencyPrefix","currencySuffix","decimal","formatNumerals","String","percent","minus","nan","newFormat","formatTypes","prefix","test","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","c","valueNegative","formatTrim","charCodeAt","Infinity","padding","f","e"],"sourceRoot":""}